#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
#ENV_DIR=${3:-}

# Have rustup install itself in cache directory.
# rustup installs rust compiler (rustc) and package manager (cargo).
export RUSTUP_HOME="$CACHE_DIR/rustup"

# Have rustup install cargo in cache directory.
# cargo holds rust tools executables and the downloaded pacakges.
export CARGO_HOME="$CACHE_DIR/cargo"

export PATH="$CARGO_HOME/bin:$PATH"

echo "-----> Install cargo"
cd "$CACHE_DIR"
if [ ! -x "rustup.sh" ]; then
    curl https://sh.rustup.rs -sSf > rustup.sh
    chmod u+x rustup.sh
fi

# Use minimal profile to save disk space.
# Mininal profile provides rust compiler (rustc) and package manager (cargo).
./rustup.sh -y --profile minimal

echo "-----> Compile the application"

# `cargo install` builds release binaries and copy them in BUILD_DIR/bin directory.
cargo install --path "$BUILD_DIR" --target-dir "$CACHE_DIR/target" --root "$BUILD_DIR"
